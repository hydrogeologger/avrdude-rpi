#!/usr/bin/python
#/usr/bin/autoreset

import sys, os, re, time, fcntl
import RPi.GPIO as GPIO


GPIO.setmode(GPIO.BOARD)


def set_stdin_to_nonblocking():
    """ Sets STDIN to be non-blocking """
    fd = sys.stdin.fileno()
    fl = fcntl.fcntl(fd, fcntl.F_GETFL)
    fcntl.fcntl(fd, fcntl.F_SETFL, fl | os.O_NONBLOCK)

def send_reset_pulse():
    """ Send reset pulse to MCU on reset line """
    pin = 11
    GPIO.setup(pin, GPIO.OUT)
    GPIO.output(pin, GPIO.HIGH)
    time.sleep(0.12)
    GPIO.output(pin, GPIO.LOW)

def process():
    """ Detects TIOCM_DTR call from ioctl_tty from STDIN """
    dtr = re.compile('.+TIOCM_DTR.+')
    start = time.time()
    while True:
        try:
            duration = time.time() - start
            stdin_text = sys.stdin.readline().strip()
            if dtr.match(stdin_text):
                send_reset_pulse()
                return
            elif duration > 5000:
                return
        except Exception:
            continue


if __name__ == "__main__":
    set_stdin_to_nonblocking()
    process()
    GPIO.cleanup()
    print("Done with autoreset")
